{"version":3,"sources":["components/HomeComponent.js","shared/urls.js","components/GraphComponent.js","components/WeatherItemComponent.js","components/WeatherComponent.js","components/HeaderComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Fragment","Container","fluid","Row","className","Col","xs","md","lg","Form","onSubmit","event","window","location","document","getElementById","value","preventDefault","handleSubmit","InputGroup","size","Input","placeholder","id","InputGroupAddon","addonType","Button","type","onClick","navigator","geolocation","getCurrentPosition","position","console","log","concat","coords","latitude","longitude","error","alert","message","block","images","01d","01n","02d","02n","03d","03n","04d","04n","09d","09n","10d","10n","11d","11n","13d","13n","50d","50n","humidity","pressure","wind","temperature","Graph","props","useEffect","ctx","index","Chart","data","labels","datasets","backgroundColor","borderColor","borderWidth","label","units","options","scales","yAxes","ticks","beginAtZero","fontColor","fontStyle","fontSize","gridLines","color","linewidth","xAxes","legend","elements","line","tension","WeatherItem","avg","list","reduce","b","temp","length","renderData","imgUrl","description","Card","CardBody","src","alt","data-toggle","href","aria-expanded","aria-controls","sm","urls","toFixed","date_txt","aria-labelledby","data-parent","GraphComponent_Graph","times","descriptions","map","desc","i","key","icons","Weather","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","forecast","city","lat","lon","fetchWeather","bind","assertThisInitialized","updateWeather","format","_this2","fetch","then","response","ok","Error","json","catch","forecastData","dateFormat","month","day","weekday","timeFormat","hour12","hour","minute","forEach","item","Intl","DateTimeFormat","Date","dt_txt","time_txt","push","main","speed","weather","icon","setState","weatherItemList","WeatherItemComponent_WeatherItem","String","fromCharCode","xl","Breadcrumb","BreadcrumbItem","active","react_router_dom","to","title","Spinner","Component","Header","Main","HeaderComponent_Header","react_router","path","component","exact","_ref","match","WeatherComponent","params","_ref2","App","basename","MainComponent","Boolean","hostname","ReactDOM","render","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75af8670.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Container, Col, Form, InputGroup, InputGroupAddon, Button, Input } from 'reactstrap';\r\n\r\nexport const Home = () => {\r\n\r\n    const handleSubmit = (event) => {\r\n        window.location = '/weather/' + document.getElementById('city').value;\r\n        event.preventDefault();\r\n    }\r\n\r\n    const getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                console.log(position);\r\n                window.location = `/weather/${position.coords.latitude}/${position.coords.longitude}`;\r\n            }, error => alert(error.message));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <Row className=\"justify-content-center text-center\">\r\n                    <Col xs={12} md={8} lg={6}>\r\n                        <Form onSubmit={event => handleSubmit(event)} >\r\n                            <InputGroup size='lg'>\r\n                                <Input placeholder='Enter Location' id='city' />\r\n                                <InputGroupAddon addonType='append'>\r\n                                    <Button type='submit'> Go </Button>\r\n                                </InputGroupAddon>\r\n                            </InputGroup>\r\n                        </Form>\r\n                        <hr /> <h5>or</h5> <hr />\r\n                        <Button onClick={getLocation} block size='lg'>\r\n                            Use Current Location\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}","export const API_KEY = '3bd16f97558395ca4a0e1ae091554a77';\r\nexport const API_URL = 'https://api.openweathermap.org/data/2.5/';\r\nexport const images = {\r\n    '01d': '/assets/images/clearSky.svg',\r\n    '01n': '/assets/images/clearSkyNight.svg',\r\n    '02d': '/assets/images/fewClouds.svg',\r\n    '02n': '/assets/images/fewCloudsNight.svg',\r\n    '03d': '/assets/images/scatteredClouds.svg',\r\n    '03n': '/assets/images/scatteredClouds.svg',\r\n    '04d': '/assets/images/brokenClouds.svg',\r\n    '04n': '/assets/images/brokenClouds.svg',\r\n    '09d': '/assets/images/showerRain.svg',\r\n    '09n': '/assets/images/showerRain.svg',\r\n    '10d': '/assets/images/rain.svg',\r\n    '10n': '/assets/images/rainNight.svg',\r\n    '11d': '/assets/images/thunderstorm.svg',\r\n    '11n': '/assets/images/thunderstorm.svg',\r\n    '13d': '/assets/images/snow.svg',\r\n    '13n': '/assets/images/snow.svg',\r\n    '50d': '/assets/images/mist.svg',\r\n    '50n': '/assets/images/mist.svg',\r\n    humidity: '/assets/images/humidity.svg',\r\n    pressure: '/assets/images/pressure.svg',\r\n    wind: '/assets/images/wind.svg',\r\n    temperature: '/assets/images/thermometer.svg'\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport Chart from 'chart.js/dist/Chart';\r\n\r\nexport const Graph = (props) => {\r\n\r\n    useEffect(() => {\r\n        const ctx = document.getElementById('chart' + props.index);\r\n        new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: props.labels,\r\n                datasets: [{\r\n                    data: props.data,\r\n                    backgroundColor: 'rgba(186, 0, 105, 0.2)',\r\n                    borderColor: 'rgba(186, 0, 105, 1)',\r\n                    borderWidth: 3,\r\n                    label: 'weather in ' + props.units\r\n                }],\r\n            },\r\n            options: {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            fontColor: 'rgba(186, 0, 105, 1)',\r\n                            fontStyle: 'bold',\r\n                            fontSize: 12\r\n                        },\r\n                        gridLines: {\r\n                            color: 'rgba(186, 0, 105, 0.2)',\r\n                            linewidth: 1\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            color: 'rgba(255, 255, 255, 0)',\r\n                            linewidth: 1\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            fontColor: 'rgba(186, 0, 105, 1)',\r\n                            fontSize: 12,\r\n                            fontStyle: 'bold'\r\n                        }\r\n                    }]\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        fontColor: 'rgba(186, 0, 105, 1)',\r\n                        fontStyle: 'bold'\r\n                    }\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        tension: 0\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    return (\r\n        <canvas id={'chart' + props.index}></canvas>\r\n    );\r\n}","import React from 'react';\r\nimport { Card, CardBody, Col, Container, Row } from 'reactstrap';\r\nimport { Graph } from './GraphComponent';\r\nimport * as urls from '../shared/urls';\r\n\r\nexport const WeatherItem = (props) => {\r\n\r\n    const index = props.index;\r\n    const avg = (list) => list.reduce((a, b) => a + b, 0) / props.data.temp.length;\r\n    const temp = avg(props.data.temp);\r\n    const humidity = avg(props.data.humidity);\r\n    const pressure = avg(props.data.pressure);\r\n    const wind = avg(props.data.wind);\r\n\r\n    const renderData = (imgUrl, description, value, units) => {\r\n        return (\r\n            <Card className='shadow mt-2'>\r\n                <CardBody>\r\n                    <Row className='align-items-center'>\r\n                        <Col xs={4}>\r\n                            <img src={imgUrl} className='w-100 img-fluid' alt={description} />\r\n                        </Col>\r\n                        <Col xs={8} className='text-center'>\r\n                            <h4>{value} <span className='h6'>{units}</span></h4>\r\n                            <p>{description}</p>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id={'heading' + index}>\r\n                <a className='d-block header-link' data-toggle='collapse' href={'#collapse' + index} aria-expanded='false' aria-controls={'collapse' + index}>\r\n                    <Container fluid>\r\n                        <Card className='shadow mt-2'>\r\n                            <CardBody>\r\n                                <Row className='align-items-center'>\r\n                                    <Col xs={4} sm={2} lg={1}>\r\n                                        <img src={urls.images.temperature} alt='temperature' className='img-fluid' />\r\n                                    </Col>\r\n                                    <Col xs={8}>\r\n                                        <h3>{temp.toFixed(2)} {props.units}</h3>\r\n                                        <h6>{props.date_txt}</h6>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Container>\r\n                </a>\r\n            </div>\r\n            <div id={'collapse' + index} className={'collapse ' + (index === 1 ? 'show' : '')} aria-labelledby={'heading' + index} data-parent='#accordion'>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col xs={12} lg={6}>\r\n                            <Card className='shadow mt-2 h-100'>\r\n                                <CardBody className='row align-items-center'>\r\n                                    <Graph index={index} data={props.data.temp} labels={props.data.times} units={props.units} />\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={12} lg={6} className='mt-3 mt-lg-0 d-none d-md-block'>\r\n                            <Row>\r\n                                {props.data.descriptions.map((desc, i) => {\r\n                                    return (\r\n                                        <Col xs={12} md={6} key={i}>\r\n                                            {renderData(urls.images[props.data.icons[i]], desc, props.data.times[i], '')}\r\n                                        </Col>\r\n                                    );\r\n                                })}\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mt-3 mb-3'>\r\n                        <Col xs={12} sm={6} md={4}> {renderData(urls.images.humidity, 'Humidity', humidity.toFixed(2), '%')}</Col>\r\n                        <Col xs={12} sm={6} md={4}> {renderData(urls.images.pressure, 'Pressure', pressure.toFixed(2), 'hPA')} </Col>\r\n                        <Col xs={12} sm={6} md={4}> {renderData(urls.images.wind, 'Wind Speed', wind.toFixed(2), 'm/s')} </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    );\r\n};","import React, { Component } from 'react';\r\nimport { Row, Container, Spinner, Breadcrumb, BreadcrumbItem, Col, Card, CardBody } from 'reactstrap';\r\nimport * as urls from '../shared/urls';\r\nimport { Link } from 'react-router-dom';\r\nimport { WeatherItem } from './WeatherItemComponent';\r\n\r\nclass Weather extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            forecast: null,\r\n            city: props.city,\r\n            lat: props.lat,\r\n            lon: props.lon\r\n        }\r\n\r\n        this.fetchWeather = this.fetchWeather.bind(this);\r\n        this.updateWeather = this.updateWeather.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const format = this.state.city ? `q=${this.state.city}` : `lat=${this.state.lat}&lon=${this.state.lon}`;\r\n        this.fetchWeather(format);\r\n    }\r\n\r\n    fetchWeather(format) {\r\n        fetch(urls.API_URL + `forecast?${format}&appid=${urls.API_KEY}&units=metric`)\r\n            .then(response => {\r\n                if (response.ok) return response;\r\n                else throw new Error('city not found !');\r\n            })\r\n            .then(response => response.json())\r\n            .then(forecast => {\r\n                this.updateWeather(forecast);\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                window.location = '/home';\r\n            });\r\n    }\r\n\r\n    updateWeather(forecast) {\r\n        const forecastData = {};\r\n        const dateFormat = {\r\n            month: 'short',\r\n            day: '2-digit',\r\n            weekday: 'short'\r\n        }\r\n        const timeFormat = {\r\n            hour12: true,\r\n            hour: 'numeric',\r\n            minute: 'numeric'\r\n        }\r\n        forecast.list.forEach((item) => {\r\n            const date_txt = new Intl.DateTimeFormat('en-US', dateFormat).format(new Date(item.dt_txt));\r\n            const time_txt = new Intl.DateTimeFormat('en-US', timeFormat).format(new Date(item.dt_txt));\r\n            if (forecastData[date_txt]) {\r\n                forecastData[date_txt].times.push(time_txt);\r\n                forecastData[date_txt].temp.push(item.main.temp);\r\n                forecastData[date_txt].humidity.push(item.main.humidity);\r\n                forecastData[date_txt].pressure.push(item.main.pressure);\r\n                forecastData[date_txt].wind.push(item.wind.speed);\r\n                forecastData[date_txt].descriptions.push(item.weather[0].description);\r\n                forecastData[date_txt].icons.push(item.weather[0].icon);\r\n            }\r\n            else {\r\n                forecastData[date_txt] = {\r\n                    times: [time_txt],\r\n                    temp: [item.main.temp],\r\n                    humidity: [item.main.humidity],\r\n                    pressure: [item.main.pressure],\r\n                    wind: [item.wind.speed],\r\n                    descriptions: [item.weather[0].description],\r\n                    icons: [item.weather[0].icon]\r\n                }\r\n            }\r\n        });\r\n        this.setState({\r\n            forecast: forecastData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.forecast) {\r\n            const weatherItemList = [];\r\n            var index = 1;\r\n            for (var date_txt in this.state.forecast) {\r\n                weatherItemList.push(<WeatherItem key={index} units={String.fromCharCode(176) + 'C'} date_txt={date_txt} data={this.state.forecast[date_txt]} index={index} />);\r\n                index++;\r\n            }\r\n            return (\r\n                <>\r\n                    <Container fluid>\r\n                        <Row className='justify-content-center'>\r\n                            <Col xs={12} xl={11}>\r\n                                <Container fluid>\r\n                                    <Breadcrumb className='shadow'>\r\n                                        <BreadcrumbItem active>\r\n                                            <Link to='/home'><h4>Home</h4></Link>\r\n                                        </BreadcrumbItem>\r\n                                        <BreadcrumbItem>\r\n                                            <h4>Weather</h4>\r\n                                        </BreadcrumbItem>\r\n                                    </Breadcrumb>\r\n                                </Container>\r\n                                <div id='accordion'>\r\n                                    {weatherItemList}\r\n                                </div>\r\n                                <Container fluid>\r\n                                    <Card className='shadow mt-3'>\r\n                                        <CardBody>\r\n                                            <h5>copyrights &copy; 2020</h5>\r\n                                            <p>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a></p>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Container>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Container>\r\n                    <Row>\r\n                        <Spinner color=\"primary\" />\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header className=\"pt-5 pb-5\">\r\n            <Container fluid className='text-center'>\r\n                <h1 className=\"display-3\">Mausam</h1>\r\n                <p className=\"lead\">your weather buddy...</p>\r\n            </Container>\r\n        </header>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Home } from './HomeComponent';\r\nimport Weather from './WeatherComponent';\r\nimport { Header } from './HeaderComponent';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        const LocalWeather = ({ match }) => {\r\n            return <Weather lat={match.params.latitude} lon={match.params.longitude} />\r\n        }\r\n        const CityWeather = ({ match }) => {\r\n            return <Weather city={match.params.city} />\r\n        }\r\n        return (\r\n            <div className=\"mb-5\">\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/home\" component={Home} />\r\n                    <Route exact path=\"/weather/:latitude/:longitude\" component={LocalWeather} />\r\n                    <Route path=\"/weather/:city\" component={CityWeather} />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { HashRouter } from 'react-router-dom';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename='/'>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.slim';\nimport 'bootstrap/dist/js/bootstrap';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}