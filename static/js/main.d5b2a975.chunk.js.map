{"version":3,"sources":["shared/urls.js","components/HomeComponent.js","components/GraphComponent.js","components/WeatherItemComponent.js","components/WeatherComponent.js","components/HeaderComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["API_KEY","API_URL","BASE_URL","images","01d","01n","02d","02n","03d","03n","04d","04n","09d","09n","10d","10n","11d","11n","13d","13n","50d","50n","humidity","pressure","wind","temperature","Home","react_default","a","createElement","react_animation_components","in","Container","fluid","Row","className","Col","xs","md","lg","Form","onSubmit","event","window","location","href","urls","document","getElementById","value","preventDefault","handleSubmit","InputGroup","size","Input","placeholder","id","InputGroupAddon","addonType","Button","type","onClick","navigator","geolocation","getCurrentPosition","position","console","log","concat","coords","latitude","longitude","error","alert","message","block","Graph","props","chartId","index","useEffect","ctx","Chart","data","labels","datasets","backgroundColor","borderColor","borderWidth","label","units","options","scales","yAxes","ticks","beginAtZero","fontColor","fontStyle","fontSize","gridLines","color","linewidth","xAxes","legend","elements","line","tension","WeatherItem","avg","list","reduce","b","temp","length","Fragment","data-toggle","aria-expanded","aria-controls","Card","CardBody","sm","xl","src","alt","toFixed","date_txt","aria-labelledby","data-parent","GraphComponent_Graph","times","descriptions","map","desc","i","key","renderData","icons","Weather","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","forecast","weather","city","lat","lon","fetchWeather","bind","assertThisInitialized","updateWeather","format","_this2","fetch","then","response","ok","Error","json","catch","forecastData","dateFormat","month","day","weekday","timeFormat","hour12","hour","minute","forEach","item","Intl","DateTimeFormat","Date","dt_txt","time_txt","push","main","speed","description","icon","setState","name","weatherItemList","celsius","String","fromCharCode","current_time","now","imgUrl","WeatherItemComponent_WeatherItem","Breadcrumb","BreadcrumbItem","active","react_router_dom","to","target","title","rel","Spinner","Component","Header","transformProps","enterTransform","Main","HeaderComponent_Header","react_router","path","component","exact","_ref","match","WeatherComponent_Weather","params","_ref2","App","MainComponent","Boolean","hostname","ReactDOM","render","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"mWAAaA,EAAU,mCACVC,EAAU,2CACVC,EAAW,gDAEXC,EAAS,CAClBC,MAAOF,EAAS,8BAChBG,MAAOH,EAAS,mCAChBI,MAAOJ,EAAS,+BAChBK,MAAOL,EAAS,oCAChBM,MAAON,EAAS,qCAChBO,MAAOP,EAAS,qCAChBQ,MAAOR,EAAS,kCAChBS,MAAOT,EAAS,kCAChBU,MAAOV,EAAS,gCAChBW,MAAOX,EAAS,gCAChBY,MAAOZ,EAAS,0BAChBa,MAAOb,EAAS,+BAChBc,MAAOd,EAAS,kCAChBe,MAAOf,EAAS,kCAChBgB,MAAOhB,EAAS,0BAChBiB,MAAOjB,EAAS,0BAChBkB,MAAOlB,EAAS,0BAChBmB,MAAOnB,EAAS,0BAChBoB,SAAUpB,EAAS,8BACnBqB,SAAUrB,EAAS,8BACnBsB,KAAMtB,EAAS,0BACfuB,YAAavB,EAAS,kCCrBbwB,EAAO,WAgBhB,OACIC,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,IAAE,GACJJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,OAAK,GACZN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,UAAU,sCACXR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACpBZ,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASC,IAAE,GACPJ,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACIH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,SAAU,SAAAC,GAAK,OArB5B,SAACA,GAClBC,OAAOC,SAASC,KAAOC,0BAAgCC,SAASC,eAAe,QAAQC,MACvFP,EAAMQ,iBAmB2CC,CAAaT,KAClCf,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYC,KAAK,MACb1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOC,YAAY,iBAAiBC,GAAG,SACvC7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAiBC,UAAU,UACvB/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQC,KAAK,UAAb,YAKhBjC,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACIH,EAAAC,EAAAC,cAAA,WADJ,IACWF,EAAAC,EAAAC,cAAA,gBADX,IACuBF,EAAAC,EAAAC,cAAA,YAEvBF,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACIH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQE,QA7BhB,WACZC,UAAUC,aACVD,UAAUC,YAAYC,mBAAmB,SAACC,GACtCC,QAAQC,IAAIF,GACZtB,OAAOC,SAASC,KDbN,iBCaa,YAAAuB,OAA8BH,EAASI,OAAOC,SAA9C,KAAAF,OAA0DH,EAASI,OAAOE,YAClG,SAAAC,GAAK,OAAIC,MAAMD,EAAME,YAwB0BC,OAAK,EAACtB,KAAK,MAAzC,wGCtCnBuB,EAAQ,SAACC,GAElB,IAAMC,EAAU,QAAUD,EAAME,MA0DhC,OAxDAC,oBAAU,WACN,IAAMC,EAAMlC,SAASC,eAAe8B,GACpC,IAAII,IAAMD,EAAK,CACXrB,KAAM,OACNuB,KAAM,CACFC,OAAQP,EAAMO,OACdC,SAAU,CAAC,CACPF,KAAMN,EAAMM,KACZG,gBAAiB,yBACjBC,YAAa,uBACbC,YAAa,EACbC,MAAO,cAAgBZ,EAAMa,SAGrCC,QAAS,CACLC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,EACbC,UAAW,uBACXC,UAAW,OACXC,SAAU,IAEdC,UAAW,CACPC,MAAO,yBACPC,UAAW,KAGnBC,MAAO,CAAC,CACJH,UAAW,CACPC,MAAO,yBACPC,UAAW,GAEfP,MAAO,CACHC,aAAa,EACbC,UAAW,uBACXE,SAAU,GACVD,UAAW,WAIvBM,OAAQ,CACJnB,OAAQ,CACJY,UAAW,uBACXC,UAAW,SAGnBO,SAAU,CACNC,KAAM,CACFC,QAAS,SAQzB/E,EAAAC,EAAAC,cAAA,UAAQ2B,GAAIsB,KC1DP6B,EAAc,SAAC9B,GAExB,IAAME,EAAQF,EAAME,MACd6B,EAAM,SAACC,GAAD,OAAUA,EAAKC,OAAO,SAAClF,EAAGmF,GAAJ,OAAUnF,EAAImF,GAAG,GAAKlC,EAAMM,KAAK6B,KAAKC,QAClED,EAAOJ,EAAI/B,EAAMM,KAAK6B,MACtB1F,EAAWsF,EAAI/B,EAAMM,KAAK7D,UAC1BC,EAAWqF,EAAI/B,EAAMM,KAAK5D,UAC1BC,EAAOoF,EAAI/B,EAAMM,KAAK3D,MAE5B,OACIG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsF,SAAA,KACIvF,EAAAC,EAAAC,cAAA,OAAK2B,GAAI,UAAYuB,GACjBpD,EAAAC,EAAAC,cAAA,KAAGM,UAAU,sBAAsBgF,cAAY,WAAWtE,KAAM,YAAckC,EAAOqC,gBAAc,QAAQC,gBAAe,WAAatC,GACnIpD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,OAAK,GACZN,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,IAAE,GACJJ,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMnF,UAAU,eACZR,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACI5F,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,UAAU,sBACXR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKoF,GAAI,EAAGjF,GAAI,EAAGkF,GAAI,EAAGtF,UAAU,qBAChCR,EAAAC,EAAAC,cAAA,OAAK6F,IAAK5E,EAAYrB,YAAakG,IAAI,cAAcxF,UAAU,eAEnER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAImF,GAAI,GACb7F,EAAAC,EAAAC,cAAA,UAAKmF,EAAKY,QAAQ,GAAlB,IAAuB/C,EAAMa,OAC7B/D,EAAAC,EAAAC,cAAA,UAAKgD,EAAMgD,kBAS3ClG,EAAAC,EAAAC,cAAA,OAAK2B,GAAI,WAAauB,EAAO5C,UAAW,YAAa2F,kBAAiB,UAAY/C,EAAOgD,cAAY,cACjGpG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,OAAK,GACZN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,GACbZ,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMnF,UAAU,qBACZR,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAUpF,UAAU,0BAChBR,EAAAC,EAAAC,cAACmG,EAAD,CAAOjD,MAAOA,EAAOI,KAAMN,EAAMM,KAAK6B,KAAM5B,OAAQP,EAAMM,KAAK8C,MAAOvC,MAAOb,EAAMa,WAI/F/D,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,EAAGJ,UAAU,kCAC1BR,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACK2C,EAAMM,KAAK+C,aAAaC,IAAI,SAACC,EAAMC,GAChC,OACI1G,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGgG,IAAKD,GAAzB,IAA8BxD,EAAM0D,WAAWzF,EAAY+B,EAAMM,KAAKqD,MAAMH,IAAKD,EAAMvD,EAAMM,KAAK8C,MAAMI,GAAI,IAA5G,UAMpB1G,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,UAAU,aACXR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAImF,GAAI,EAAGlF,GAAI,GAAxB,IAA6BuC,EAAM0D,WAAWzF,EAAYxB,SAAU,WAAYA,EAASsG,QAAQ,GAAI,MACrGjG,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAImF,GAAI,EAAGlF,GAAI,GAAxB,IAA6BuC,EAAM0D,WAAWzF,EAAYvB,SAAU,WAAYA,EAASqG,QAAQ,GAAI,OAArG,KACAjG,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAImF,GAAI,EAAGlF,GAAI,GAAxB,IAA6BuC,EAAM0D,WAAWzF,EAAYtB,KAAM,aAAcA,EAAKoG,QAAQ,GAAI,OAA/F,UCtDHa,cAEjB,SAAAA,EAAY5D,GAAO,IAAA6D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMhE,KAEDoE,MAAQ,CACTC,SAAU,KACVC,QAAS,KACTC,KAAMvE,EAAMuE,KACZC,IAAKxE,EAAMwE,IACXC,IAAKzE,EAAMyE,KAGfZ,EAAKa,aAAeb,EAAKa,aAAaC,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACpBA,EAAKgB,cAAgBhB,EAAKgB,cAAcF,KAAnBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAZNA,mFAgBf,IAAMiB,EAASd,KAAKI,MAAMG,KAAX,KAAAhF,OAAuByE,KAAKI,MAAMG,MAAlC,OAAAhF,OAAkDyE,KAAKI,MAAMI,IAA7D,SAAAjF,OAAwEyE,KAAKI,MAAMK,KAClGT,KAAKU,aAAaI,wCAGTA,GAAQ,IAAAC,EAAAf,KACjBgB,MAAM/G,EAAA,YAAAsB,OAA2BuF,EAA3B,WAAAvF,OAA2CtB,EAA3C,kBACDgH,KAAK,SAAAC,GACF,GAAIA,EAASC,GAAI,OAAOD,EACxB,MAAM,IAAIE,MAAM,sBAEnBH,KAAK,SAAAC,GAAQ,OAAIA,EAASG,SAC1BJ,KAAK,SAAAZ,GACFW,MAAM/G,EAAA,WAAAsB,OAA0BuF,EAA1B,WAAAvF,OAA0CtB,EAA1C,kBACDgH,KAAK,SAAAC,GACF,GAAIA,EAASC,GAAI,OAAOD,EACxB,MAAM,IAAIE,MAAM,sBAEnBH,KAAK,SAAAC,GAAQ,OAAIA,EAASG,SAC1BJ,KAAK,SAAAX,GACFS,EAAKF,cAAcP,EAASD,KAE/BiB,MAAM,SAAA3F,GAAW,MAAMA,MAE/B2F,MAAM,SAAA3F,GACHC,MAAMD,EAAME,SACZ/B,OAAOC,SAASC,KAAOC,8DAIrBqG,EAASD,GAEnB,IAAMkB,EAAe,GACfC,EAAa,CACfC,MAAO,QACPC,IAAK,UACLC,QAAS,SAEPC,EAAa,CACfC,QAAQ,EACRC,KAAM,UACNC,OAAQ,WAGZ1B,EAASrC,KAAKgE,QAAQ,SAACC,GACnB,IAAMjD,EAAW,IAAIkD,KAAKC,eAAe,QAASX,GAAYV,OAAO,IAAIsB,KAAKH,EAAKI,SAC7EC,EAAW,IAAIJ,KAAKC,eAAe,QAASP,GAAYd,OAAO,IAAIsB,KAAKH,EAAKI,SAC/Ed,EAAavC,IACbuC,EAAavC,GAAUI,MAAMmD,KAAKD,GAClCf,EAAavC,GAAUb,KAAKoE,KAAKN,EAAKO,KAAKrE,MAC3CoD,EAAavC,GAAUvG,SAAS8J,KAAKN,EAAKO,KAAK/J,UAC/C8I,EAAavC,GAAUtG,SAAS6J,KAAKN,EAAKO,KAAK9J,UAC/C6I,EAAavC,GAAUrG,KAAK4J,KAAKN,EAAKtJ,KAAK8J,OAC3ClB,EAAavC,GAAUK,aAAakD,KAAKN,EAAK3B,QAAQ,GAAGoC,aACzDnB,EAAavC,GAAUW,MAAM4C,KAAKN,EAAK3B,QAAQ,GAAGqC,OAGlDpB,EAAavC,GAAY,CACrBI,MAAO,CAACkD,GACRnE,KAAM,CAAC8D,EAAKO,KAAKrE,MACjB1F,SAAU,CAACwJ,EAAKO,KAAK/J,UACrBC,SAAU,CAACuJ,EAAKO,KAAK9J,UACrBC,KAAM,CAACsJ,EAAKtJ,KAAK8J,OACjBpD,aAAc,CAAC4C,EAAK3B,QAAQ,GAAGoC,aAC/B/C,MAAO,CAACsC,EAAK3B,QAAQ,GAAGqC,SAIpC3C,KAAK4C,SAAS,CACVvC,SAAUkB,EACVhB,KAAMF,EAASE,KAAKsC,KACpBvC,QAAS,CACL7H,SAAU6H,EAAQkC,KAAK/J,SAASsG,QAAQ,GACxCrG,SAAU4H,EAAQkC,KAAK9J,SAASqG,QAAQ,GACxCpG,KAAM2H,EAAQ3H,KAAK8J,MAAM1D,QAAQ,GACjCZ,KAAMmC,EAAQkC,KAAKrE,KAAKY,QAAQ,GAChC4D,KAAMrC,EAAQA,QAAQ,GAAGqC,KACzBD,YAAapC,EAAQA,QAAQ,GAAGoC,gDAOxC,GAAI1C,KAAKI,MAAMC,SAAU,CACrB,IAAMyC,EAAkB,GACpB5G,EAAQ,EACN6G,EAAUC,OAAOC,aAAa,KAAO,IACrCC,EAAe,IAAIhB,KAAKC,eAAe,QAAS,CAClDN,QAAQ,EACRC,KAAM,UACNC,OAAQ,YACTjB,OAAOsB,KAAKe,OAETzD,EAAa,SAAC0D,EAAQV,EAAatI,EAAOyC,GAC5C,OACI/D,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMnF,UAAU,eACZR,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACI5F,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,UAAU,sBACXR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GACLV,EAAAC,EAAAC,cAAA,OAAK6F,IAAKuE,EAAQ9J,UAAU,kBAAkBwF,IAAK4D,KAEvD5J,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,EAAGF,UAAU,eAClBR,EAAAC,EAAAC,cAAA,UAAKoB,EAAL,IAAYtB,EAAAC,EAAAC,cAAA,QAAMM,UAAU,MAAMuD,IAClC/D,EAAAC,EAAAC,cAAA,SAAI0J,QAQ5B,IAAK,IAAI1D,KAAYgB,KAAKI,MAAMC,SACd,IAAVnE,GACA4G,EAAgBP,KACZzJ,EAAAC,EAAAC,cAACqK,EAAD,CACI5D,IAAKvD,EACLW,MAAOkG,EACP/D,SAAUA,EACV1C,KAAM0D,KAAKI,MAAMC,SAASrB,GAC1B9C,MAAOA,EACPwD,WAAYA,KAGxBxD,IAGJ,OACIpD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,OAAK,GACZN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,UAAU,0BACXR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAIoF,GAAI,IACb9F,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,IAAE,GACJJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,OAAK,GACZN,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAYhK,UAAU,UAClBR,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAgBC,QAAM,GAClB1K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAMC,GAAG,SAAQ5K,EAAAC,EAAAC,cAAA,oBAErBF,EAAAC,EAAAC,cAACuK,EAAA,EAAD,KACIzK,EAAAC,EAAAC,cAAA,uBAGRF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMnF,UAAU,UACZR,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACI5F,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,UAAU,sBACXR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKoF,GAAI,EAAGjF,GAAI,EAAGkF,GAAI,EAAGtF,UAAU,qBAChCR,EAAAC,EAAAC,cAAA,OAAK6F,IAAK5E,EAAYrB,YAAakG,IAAI,cAAcxF,UAAU,eAEnER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAImF,GAAI,GACb7F,EAAAC,EAAAC,cAAA,UAAKgH,KAAKI,MAAMG,MAChBzH,EAAAC,EAAAC,cAAA,UAAKgH,KAAKI,MAAME,QAAQnC,KAAO,IAAM4E,GACrCjK,EAAAC,EAAAC,cAAA,qBAKhBF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAImF,GAAI,EAAGjF,GAAI,GAAxB,IAA6BgG,EAAWzF,EAAY+F,KAAKI,MAAME,QAAQqC,MAAO3C,KAAKI,MAAME,QAAQoC,YAAaQ,EAAc,IAA5H,KACApK,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAImF,GAAI,EAAGjF,GAAI,GAAxB,IAA6BgG,EAAWzF,EAAYxB,SAAU,UAAWuH,KAAKI,MAAME,QAAQ7H,SAAU,KAAtG,KACAK,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAImF,GAAI,EAAGjF,GAAI,GAAxB,IAA6BgG,EAAWzF,EAAYvB,SAAU,WAAYsH,KAAKI,MAAME,QAAQ5H,SAAU,OAAvG,KACAI,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAImF,GAAI,EAAGjF,GAAI,GAAxB,IAA6BgG,EAAWzF,EAAYtB,KAAM,aAAcqH,KAAKI,MAAME,QAAQ3H,KAAM,OAAjG,QAIZG,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,aACHmI,GAELhK,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,OAAK,GACZN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMnF,UAAU,eACZR,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACI5F,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,yBAEIF,EAAAC,EAAAC,cAAA,KAAG2K,OAAO,SAAS3J,KAAK,2CAA2C4J,MAAM,UAAUC,IAAI,uBAAvF,WAFJ,OAMI/K,EAAAC,EAAAC,cAAA,KAAG2K,OAAO,SAAS3J,KAAK,4BAA4B4J,MAAM,WAAWC,IAAI,uBAAzE,2BAchC,OACI/K,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAASvG,MAAM,oBAjNEwG,aCHxBC,EAAS,WAClB,OACIlL,EAAAC,EAAAC,cAACC,EAAA,cAAD,CAAeC,IAAE,EACb+K,eAAgB,CACZC,eAAgB,qBAEpBpL,EAAAC,EAAAC,cAAA,UAAQM,UAAU,aACdR,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,OAAK,EAACE,UAAU,eACvBR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,aAAd,UACAR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,QAAb,6BCeL6K,mLAdP,OACIrL,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACXR,EAAAC,EAAAC,cAACoL,EAAD,MACAtL,EAAAC,EAAAC,cAACqL,EAAA,EAAD,KACIvL,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAW1L,IAC/BC,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAK,gCAAgCC,UAXzC,SAAAE,GAAe,IAAZC,EAAYD,EAAZC,MACpB,OAAO5L,EAAAC,EAAAC,cAAC2L,EAAD,CAASnE,IAAKkE,EAAME,OAAOnJ,SAAUgF,IAAKiE,EAAME,OAAOlJ,eAWtD5C,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UATrB,SAAAM,GAAe,IAAZH,EAAYG,EAAZH,MACnB,OAAO5L,EAAAC,EAAAC,cAAC2L,EAAD,CAASpE,KAAMmE,EAAME,OAAOrE,UAS3BzH,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAUX,GAAG,mBAfdK,aCYJe,0LAVX,OACEhM,EAAAC,EAAAC,cAACyK,EAAA,EAAD,KACE3K,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAAC+L,EAAD,eALQhB,cCMEiB,QACW,cAA7BlL,OAAOC,SAASkL,UAEe,UAA7BnL,OAAOC,SAASkL,UAEhBnL,OAAOC,SAASkL,SAASP,MACvB,2DCTNQ,IAASC,OAAOrM,EAAAC,EAAAC,cAACoM,EAAD,MAASlL,SAASC,eAAe,SDwH3C,kBAAmBc,WACrBA,UAAUoK,cAAcC,MAAMrE,KAAK,SAAAsE,GACjCA,EAAaC","file":"static/js/main.d5b2a975.chunk.js","sourcesContent":["export const API_KEY = '3bd16f97558395ca4a0e1ae091554a77';\r\nexport const API_URL = 'https://api.openweathermap.org/data/2.5/';\r\nexport const BASE_URL = 'https://bharathkumar281.github.io/weather-app';\r\nexport const BASE_ROUTE = '/weather-app/#';\r\nexport const images = {\r\n    '01d': BASE_URL+'/assets/images/clearSky.svg',\r\n    '01n': BASE_URL+'/assets/images/clearSkyNight.svg',\r\n    '02d': BASE_URL+'/assets/images/fewClouds.svg',\r\n    '02n': BASE_URL+'/assets/images/fewCloudsNight.svg',\r\n    '03d': BASE_URL+'/assets/images/scatteredClouds.svg',\r\n    '03n': BASE_URL+'/assets/images/scatteredClouds.svg',\r\n    '04d': BASE_URL+'/assets/images/brokenClouds.svg',\r\n    '04n': BASE_URL+'/assets/images/brokenClouds.svg',\r\n    '09d': BASE_URL+'/assets/images/showerRain.svg',\r\n    '09n': BASE_URL+'/assets/images/showerRain.svg',\r\n    '10d': BASE_URL+'/assets/images/rain.svg',\r\n    '10n': BASE_URL+'/assets/images/rainNight.svg',\r\n    '11d': BASE_URL+'/assets/images/thunderstorm.svg',\r\n    '11n': BASE_URL+'/assets/images/thunderstorm.svg',\r\n    '13d': BASE_URL+'/assets/images/snow.svg',\r\n    '13n': BASE_URL+'/assets/images/snow.svg',\r\n    '50d': BASE_URL+'/assets/images/mist.svg',\r\n    '50n': BASE_URL+'/assets/images/mist.svg',\r\n    humidity: BASE_URL+'/assets/images/humidity.svg',\r\n    pressure: BASE_URL+'/assets/images/pressure.svg',\r\n    wind: BASE_URL+'/assets/images/wind.svg',\r\n    temperature: BASE_URL+'/assets/images/thermometer.svg'\r\n};\r\n","import React from 'react';\r\nimport { Row, Container, Col, Form, InputGroup, InputGroupAddon, Button, Input } from 'reactstrap';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\nimport * as urls from '../shared/urls';\r\n\r\nexport const Home = () => {\r\n\r\n    const handleSubmit = (event) => {\r\n        window.location.href = urls.BASE_ROUTE + '/weather/' + document.getElementById('city').value;\r\n        event.preventDefault();\r\n    }\r\n\r\n    const getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                console.log(position);\r\n                window.location.href = urls.BASE_ROUTE + `/weather/${position.coords.latitude}/${position.coords.longitude}`;\r\n            }, error => alert(error.message));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fade in>\r\n            <Container fluid>\r\n                <Row className=\"justify-content-center text-center\">\r\n                    <Col xs={12} md={8} lg={6}>\r\n                        <Stagger in>\r\n                            <Fade>\r\n                                <Form onSubmit={event => handleSubmit(event)} >\r\n                                    <InputGroup size='lg'>\r\n                                        <Input placeholder='Enter Location' id='city' />\r\n                                        <InputGroupAddon addonType='append'>\r\n                                            <Button type='submit'> Go </Button>\r\n                                        </InputGroupAddon>\r\n                                    </InputGroup>\r\n                                </Form>\r\n                            </Fade>\r\n                            <Fade>\r\n                                <hr /> <h5>or</h5> <hr />\r\n                            </Fade>\r\n                            <Fade>\r\n                                <Button onClick={getLocation} block size='lg'>\r\n                                    Use Current Location\r\n                                </Button>\r\n                            </Fade>\r\n                        </Stagger>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fade>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport Chart from 'chart.js/dist/Chart';\r\n\r\nexport const Graph = (props) => {\r\n\r\n    const chartId = 'chart' + props.index;\r\n\r\n    useEffect(() => {\r\n        const ctx = document.getElementById(chartId);\r\n        new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: props.labels,\r\n                datasets: [{\r\n                    data: props.data,\r\n                    backgroundColor: 'rgba(186, 0, 105, 0.2)',\r\n                    borderColor: 'rgba(186, 0, 105, 1)',\r\n                    borderWidth: 3,\r\n                    label: 'weather in ' + props.units\r\n                }],\r\n            },\r\n            options: {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            fontColor: 'rgba(186, 0, 105, 1)',\r\n                            fontStyle: 'bold',\r\n                            fontSize: 12\r\n                        },\r\n                        gridLines: {\r\n                            color: 'rgba(186, 0, 105, 0.2)',\r\n                            linewidth: 1\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            color: 'rgba(255, 255, 255, 0)',\r\n                            linewidth: 1\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            fontColor: 'rgba(186, 0, 105, 1)',\r\n                            fontSize: 12,\r\n                            fontStyle: 'bold'\r\n                        }\r\n                    }]\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        fontColor: 'rgba(186, 0, 105, 1)',\r\n                        fontStyle: 'bold'\r\n                    }\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        tension: 0\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    return (\r\n        <canvas id={chartId}></canvas>\r\n    );\r\n}","import React from 'react';\r\nimport { Card, CardBody, Col, Container, Row } from 'reactstrap';\r\nimport { Graph } from './GraphComponent';\r\nimport * as urls from '../shared/urls';\r\nimport { Fade } from 'react-animation-components';\r\n\r\nexport const WeatherItem = (props) => {\r\n\r\n    const index = props.index;\r\n    const avg = (list) => list.reduce((a, b) => a + b, 0) / props.data.temp.length;\r\n    const temp = avg(props.data.temp);\r\n    const humidity = avg(props.data.humidity);\r\n    const pressure = avg(props.data.pressure);\r\n    const wind = avg(props.data.wind);\r\n\r\n    return (\r\n        <>\r\n            <div id={'heading' + index}>\r\n                <a className='d-block header-link' data-toggle='collapse' href={'#collapse' + index} aria-expanded='false' aria-controls={'collapse' + index}>\r\n                    <Container fluid>\r\n                        <Fade in>\r\n                            <Card className='shadow mt-2'>\r\n                                <CardBody>\r\n                                    <Row className='align-items-center'>\r\n                                        <Col sm={3} lg={2} xl={1} className='d-none d-sm-block'>\r\n                                            <img src={urls.images.temperature} alt='temperature' className='img-fluid' />\r\n                                        </Col>\r\n                                        <Col xs={12} sm={9}>\r\n                                            <h3>{temp.toFixed(2)} {props.units}</h3>\r\n                                            <h6>{props.date_txt}</h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Fade>\r\n                    </Container>\r\n                </a>\r\n            </div>\r\n            <div id={'collapse' + index} className={'collapse '} aria-labelledby={'heading' + index} data-parent='#accordion'>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col xs={12} lg={6}>\r\n                            <Card className='shadow mt-2 h-100'>\r\n                                <CardBody className='row align-items-center'>\r\n                                    <Graph index={index} data={props.data.temp} labels={props.data.times} units={props.units} />\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={12} lg={6} className='mt-3 mt-lg-0 d-none d-md-block'>\r\n                            <Row>\r\n                                {props.data.descriptions.map((desc, i) => {\r\n                                    return (\r\n                                        <Col xs={12} md={6} key={i}> {props.renderData(urls.images[props.data.icons[i]], desc, props.data.times[i], '')} </Col>\r\n                                    );\r\n                                })}\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mt-3 mb-3'>\r\n                        <Col xs={12} sm={6} md={4}> {props.renderData(urls.images.humidity, 'Humidity', humidity.toFixed(2), '%')}</Col>\r\n                        <Col xs={12} sm={6} md={4}> {props.renderData(urls.images.pressure, 'Pressure', pressure.toFixed(2), 'hPA')} </Col>\r\n                        <Col xs={12} sm={6} md={4}> {props.renderData(urls.images.wind, 'Wind Speed', wind.toFixed(2), 'm/s')} </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    );\r\n};","import React, { Component } from 'react';\r\nimport { Row, Container, Spinner, Breadcrumb, BreadcrumbItem, Col, Card, CardBody } from 'reactstrap';\r\nimport * as urls from '../shared/urls';\r\nimport { Link } from 'react-router-dom';\r\nimport { WeatherItem } from './WeatherItemComponent';\r\nimport { Fade } from 'react-animation-components';\r\n\r\nexport default class Weather extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            forecast: null,\r\n            weather: null,\r\n            city: props.city,\r\n            lat: props.lat,\r\n            lon: props.lon\r\n        }\r\n\r\n        this.fetchWeather = this.fetchWeather.bind(this);\r\n        this.updateWeather = this.updateWeather.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const format = this.state.city ? `q=${this.state.city}` : `lat=${this.state.lat}&lon=${this.state.lon}`;\r\n        this.fetchWeather(format);\r\n    }\r\n\r\n    fetchWeather(format) {\r\n        fetch(urls.API_URL + `forecast?${format}&appid=${urls.API_KEY}&units=metric`)\r\n            .then(response => {\r\n                if (response.ok) return response;\r\n                throw new Error('city not found !');\r\n            })\r\n            .then(response => response.json())\r\n            .then(forecast => {\r\n                fetch(urls.API_URL + `weather?${format}&appid=${urls.API_KEY}&units=metric`)\r\n                    .then(response => {\r\n                        if (response.ok) return response;\r\n                        throw new Error('city not found !');\r\n                    })\r\n                    .then(response => response.json())\r\n                    .then(weather => {\r\n                        this.updateWeather(weather, forecast);\r\n                    })\r\n                    .catch(error => { throw error; });\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                window.location.href = urls.BASE_ROUTE + '/home';\r\n            });\r\n    }\r\n\r\n    updateWeather(weather, forecast) {\r\n\r\n        const forecastData = {};\r\n        const dateFormat = {\r\n            month: 'short',\r\n            day: '2-digit',\r\n            weekday: 'short'\r\n        }\r\n        const timeFormat = {\r\n            hour12: true,\r\n            hour: 'numeric',\r\n            minute: 'numeric'\r\n        }\r\n\r\n        forecast.list.forEach((item) => {\r\n            const date_txt = new Intl.DateTimeFormat('en-US', dateFormat).format(new Date(item.dt_txt));\r\n            const time_txt = new Intl.DateTimeFormat('en-US', timeFormat).format(new Date(item.dt_txt));\r\n            if (forecastData[date_txt]) {\r\n                forecastData[date_txt].times.push(time_txt);\r\n                forecastData[date_txt].temp.push(item.main.temp);\r\n                forecastData[date_txt].humidity.push(item.main.humidity);\r\n                forecastData[date_txt].pressure.push(item.main.pressure);\r\n                forecastData[date_txt].wind.push(item.wind.speed);\r\n                forecastData[date_txt].descriptions.push(item.weather[0].description);\r\n                forecastData[date_txt].icons.push(item.weather[0].icon);\r\n            }\r\n            else {\r\n                forecastData[date_txt] = {\r\n                    times: [time_txt],\r\n                    temp: [item.main.temp],\r\n                    humidity: [item.main.humidity],\r\n                    pressure: [item.main.pressure],\r\n                    wind: [item.wind.speed],\r\n                    descriptions: [item.weather[0].description],\r\n                    icons: [item.weather[0].icon]\r\n                }\r\n            }\r\n        });\r\n        this.setState({\r\n            forecast: forecastData,\r\n            city: forecast.city.name,\r\n            weather: {\r\n                humidity: weather.main.humidity.toFixed(2),\r\n                pressure: weather.main.pressure.toFixed(2),\r\n                wind: weather.wind.speed.toFixed(2),\r\n                temp: weather.main.temp.toFixed(2),\r\n                icon: weather.weather[0].icon,\r\n                description: weather.weather[0].description\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.forecast) {\r\n            const weatherItemList = [];\r\n            var index = 0;\r\n            const celsius = String.fromCharCode(176) + 'C';\r\n            const current_time = new Intl.DateTimeFormat('en-US', {\r\n                hour12: true,\r\n                hour: 'numeric',\r\n                minute: 'numeric'\r\n            }).format(Date.now());\r\n\r\n            const renderData = (imgUrl, description, value, units) => {\r\n                return (\r\n                    <Card className='shadow mt-2'>\r\n                        <CardBody>\r\n                            <Row className='align-items-center'>\r\n                                <Col xs={4}>\r\n                                    <img src={imgUrl} className='w-100 img-fluid' alt={description} />\r\n                                </Col>\r\n                                <Col xs={8} className='text-center'>\r\n                                    <h4>{value} <span className='h6'>{units}</span></h4>\r\n                                    <p>{description}</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                );\r\n            }\r\n\r\n            for (var date_txt in this.state.forecast) {\r\n                if (index !== 0) {\r\n                    weatherItemList.push(\r\n                        <WeatherItem\r\n                            key={index}\r\n                            units={celsius}\r\n                            date_txt={date_txt}\r\n                            data={this.state.forecast[date_txt]}\r\n                            index={index}\r\n                            renderData={renderData} />\r\n                    );\r\n                }\r\n                index++;\r\n            }\r\n\r\n            return (\r\n                <Container fluid>\r\n                    <Row className='justify-content-center'>\r\n                        <Col xs={12} xl={11}>\r\n                            <Fade in>\r\n                                <Container fluid>\r\n                                    <Breadcrumb className='shadow'>\r\n                                        <BreadcrumbItem active>\r\n                                            <Link to='/home'><h4>Home</h4></Link>\r\n                                        </BreadcrumbItem>\r\n                                        <BreadcrumbItem>\r\n                                            <h4>Weather</h4>\r\n                                        </BreadcrumbItem>\r\n                                    </Breadcrumb>\r\n                                    <Card className='shadow'>\r\n                                        <CardBody>\r\n                                            <Row className='align-items-center'>\r\n                                                <Col sm={3} lg={2} xl={1} className='d-none d-sm-block'>\r\n                                                    <img src={urls.images.temperature} alt='temperature' className='img-fluid' />\r\n                                                </Col>\r\n                                                <Col xs={12} sm={9}>\r\n                                                    <h1>{this.state.city}</h1>\r\n                                                    <h3>{this.state.weather.temp + ' ' + celsius}</h3>\r\n                                                    <h6>Now</h6>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                    <Row>\r\n                                        <Col xs={12} sm={6} lg={3}> {renderData(urls.images[this.state.weather.icon], this.state.weather.description, current_time, '')} </Col>\r\n                                        <Col xs={12} sm={6} lg={3}> {renderData(urls.images.humidity, 'Humidty', this.state.weather.humidity, '%')} </Col>\r\n                                        <Col xs={12} sm={6} lg={3}> {renderData(urls.images.pressure, 'Pressure', this.state.weather.pressure, 'hPA')} </Col>\r\n                                        <Col xs={12} sm={6} lg={3}> {renderData(urls.images.wind, 'Wind Speed', this.state.weather.wind, 'm/s')} </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Fade>\r\n                            <div id='accordion'>\r\n                                {weatherItemList}\r\n                            </div>\r\n                            <Container fluid>\r\n                                <Card className='shadow mt-3'>\r\n                                    <CardBody>\r\n                                        <h5>copyrights &copy; 2020</h5>\r\n                                        <p>\r\n                                            Icons made by\r\n                                            <a target='_blank' href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\" rel='noopener noreferrer'>\r\n                                                Freepik\r\n                                            </a>\r\n                                            from\r\n                                            <a target='_blank' href=\"https://www.flaticon.com/\" title=\"Flaticon\" rel='noopener noreferrer'>\r\n                                                www.flaticon.com\r\n                                            </a>\r\n                                        </p>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Container>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Container>\r\n                    <Spinner color=\"primary\" />\r\n                </Container>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <FadeTransform in\r\n            transformProps={{\r\n                enterTransform: 'translateY(20px)'\r\n            }}>\r\n            <header className=\"pt-5 pb-5\">\r\n                <Container fluid className='text-center'>\r\n                    <h1 className=\"display-3\">Mausam</h1>\r\n                    <p className=\"lead\">your weather buddy...</p>\r\n                </Container>\r\n            </header>\r\n        </FadeTransform>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Home } from './HomeComponent';\r\nimport Weather from './WeatherComponent';\r\nimport { Header } from './HeaderComponent';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        const LocalWeather = ({ match }) => {\r\n            return <Weather lat={match.params.latitude} lon={match.params.longitude} />\r\n        }\r\n        const CityWeather = ({ match }) => {\r\n            return <Weather city={match.params.city} />\r\n        }\r\n        return (\r\n            <div className=\"mb-5\">\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/home\" component={Home} />\r\n                    <Route exact path=\"/weather/:latitude/:longitude\" component={LocalWeather} />\r\n                    <Route path=\"/weather/:city\" component={CityWeather} />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { HashRouter } from 'react-router-dom';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.slim';\nimport 'bootstrap/dist/js/bootstrap';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}